#!/usr/bin/env python

import argparse
import os
import shutil
import subprocess

import common

from osbuild import run
from osbuild import check
from osbuild import main
from osbuild import command
from osbuild import config


def _get_profile():
    profile_path = os.path.expanduser("~/.sugar/uitests")
    shutil.rmtree(profile_path, ignore_errors=True)
    return profile_path


def _get_test_path(name):
    return os.path.join(common.build_dir, "tests", name)


def _check_ui(log_path):
    print("* Checking UI")

    profile_path = _get_profile()

    test_command = "python -u %s" % _get_test_path("shell.py")

    os.environ["SUGAR_RUN_TEST"] = test_command

    result = True
    try:
        command.run(["sugar-runner"])
    except subprocess.CalledProcessError:
        result = False

    run.collect_logs(os.path.join(profile_path, "logs"), log_path)

    return result


def _run_checks():
    log_path = os.path.join(common.logs_dir, "sugar.log")

    try:
        os.unlink(log_path)
    except OSError:
        pass

    os.environ["SUGAR_TEST_LOG"] = log_path
    os.environ["SUGAR_PROFILE_NAME"] = "dummy"
    os.environ["SUGAR_RUNNER_VIRTUAL"] = "yes"

    print("\n= Check =\n")

    if not check.check():
        return False

    if not _check_ui(log_path):
        return False

    return True


parser = argparse.ArgumentParser()
parser.add_argument("module", nargs="?", help="name of the module to test")
args = parser.parse_args()

common.setup()

os.environ["SUGAR_LOGGER_LEVEL"] = "debug"
os.environ["SUGAR_PROFILE"] = "uitests"
os.environ["GTK_MODULES"] = "gail:atk-bridge"

if args.module:
    if not check.check_one(args.module):
        common.failed()
else:
    if not main.run_build():
        common.failed()

    if not _run_checks():
        common.failed()
