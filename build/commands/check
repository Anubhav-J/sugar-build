#!/usr/bin/env python

import argparse
import os
import shutil
import subprocess
import sys

import common

from osbuild import run
from osbuild import check
from osbuild import main
from osbuild import command


def _get_profile():
    profile_path = os.path.expanduser("~/.sugar/uitests")
    shutil.rmtree(profile_path, ignore_errors=True)
    return profile_path


def _get_test_path(name):
    return os.path.join(common.build_dir, "tests", name)


def _check_ui():
    print("* Checking UI")

    profile_path = _get_profile()

    test_command = "python -u %s" % _get_test_path("shell.py")

    os.environ["SUGAR_RUN_TEST"] = test_command

    result = True
    try:
        command.run(["sugar-runner"])
    except subprocess.CalledProcessError:
        result = False

    run.collect_logs(os.path.join(profile_path, "logs"), _get_log_path())

    return result


def _get_log_path():
    log_path = os.path.join(common.logs_dir, "sugar.log")

    try:
        os.unlink(log_path)
    except OSError:
        pass

    return log_path


def _setup_checks_env():
    os.environ["SUGAR_TEST_LOG"] = _get_log_path()
    os.environ["SUGAR_PROFILE_NAME"] = "dummy"
    os.environ["SUGAR_RUNNER_VIRTUAL"] = "yes"

def _run_checks():
    _setup_checks_env()

    print("\n= Check =\n")

    if not check.check():
        return False

    if not _check_ui():
        return False

    return True


parser = argparse.ArgumentParser()
parser.add_argument("module", nargs="?", help="name of the module to test")
args = parser.parse_args()

common.setup()

os.environ["SUGAR_LOGGER_LEVEL"] = "debug"
os.environ["SUGAR_PROFILE"] = "uitests"

if args.module:
    if args.module == "ui":
        _setup_checks_env()
        result = _check_ui()
    else:
        result = check.check_one(args.module)

    if not result:
        sys.exit(1)
else:
    if not main.run_build():
        sys.exit(1)

    if not _run_checks():
        sys.exit(1)
